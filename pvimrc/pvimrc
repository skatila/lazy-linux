"be iMproved, required for vundle
set nocompatible
set clipboard=unnamedplus
"filetype should be off until after vundle is initialized for rust to start
filetype off
set background=dark
set number
" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

set backspace=2		" make backspace work
set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
set hidden		" Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes)


" Setting runtimepath empty except to what is in pvim screws up autodetection
" and just about everything. But is good to detect things
"set runtimepath=~/.pvim/bundle/Vundle.vim,~/.pvim/vim,~/pvim/vim/after,~/.vim

set runtimepath+=~/.pvim/bundle/Vundle.vim
"setting rtp in manually instead of just appending the Vundle had to be done
"to work around old debian stable. love/hate debian
"set runtimepath=~/.pvim/bundle/Vundle.vim,~/.pvim/vim,~/pvim/vim/after,~/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim80,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after
""""Setting up vundle"""""""
"
syntax on
"
" set the runtime path to include Vundle and initialize
call vundle#begin('~/.pvim/bundle')
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'Valloric/YouCompleteMe' 

" editorconfig
Plugin 'editorconfig/editorconfig-vim'

"snippets
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'

"syntax
Plugin 'scrooloose/syntastic'
Plugin 'rust-lang/rust.vim'
"Plugin 'racer-rust/vim-racer'
"ultipsnips defaults to 3 if available
"let g:UltiSnipsUsePythonVersion = 2

"tagbar
Plugin 'majutsushi/tagbar'
nmap <F9> :TagbarToggle<CR>

"git git git
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'

"nice powerline alternative
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

"ctrl+space
Plugin 'vim-ctrlspace/vim-ctrlspace'

"undotree
Plugin 'mbbill/undotree'
nmap <F8> :UndotreeToggle<CR>
if has("persistent_undo")
    set undodir=~/.pvim/undodir/
    set undofile
endif
call vundle#end()

filetype plugin indent on 
"filetype should be off until after vundle is initialized for rust to start
"gives a sembalance of lua autocompletion

set omnifunc=syntaxcomplete#Complete

set shell=/bin/bash
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:ycm_semantic_triggers =  {
  \   'c' : ['->', '.'],
  \   'cpp,objcpp' : ['->', '.', '::'],
  \   'lua' : ['.', ':'],
  \}

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_python_checkers = [ 'flake8' ]
let g:syntastic_python_flake8_args = '--ignore=W191,E128'

let g:syntastic_rust_checkers = ['rustc']

"setting up vim-racer
"let g:racer_cmd = "/home/dchaos/.cargo/bin"
"let g:racer_experimental_completer = 1
let g:ycm_rust_src_path = '/opt/rust/src'
" vim: set ft=vim:
autocmd BufNewFile,BufRead *.rs set filetype=rust
"autocmd BufNewFile,BufRead *.c set filetype=c
let g:ycm_global_ycm_extra_conf = ''

"Setting up ctrl-space
"
if executable("ag")
    let g:CtrlSpaceGlobCommand = 'ag -l --nocolor -g ""'
endif
let g:CtrlSpaceSearchTiming = 500
"Ctrl-space setup done

"
"Regular vim setup
"
set number

set autoindent
set tabstop=4
set shiftwidth=4
"autocmd Filetype * setlocal noexpandtab
" For some reason adding just setlocal noexpandtab doesn't work
autocmd Filetype * setlocal tabstop=4 softtabstop=4 shiftwidth=4 noexpandtab
set ruler
"Remove all trailing whitespace by pressing F5
nnoremap <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline#extensions#tabline#formatter = 'jsformatter'

"remap fold
set foldmethod=indent   
set foldnestmax=10
set nofoldenable
set foldlevel=2
nnoremap <Space> za

"custom commands
command Diff execute 'w !git diff --no-index % -'
nnoremap <F7> :Diff <CR>

